<!DOCTYPE html>
<html lang="de">
@using System.Configuration
@using System.Data
@using MySql.Data.MySqlClient
@functions
{
	class Mahlzeit
	{
		public int ID { get; set; }
		public string Name { get; set; }
		public string Beschreibung { get; set; }
		public int Vorrat { get; set; }
		public bool verfügbar { get; set; }
	};

	class Preis
	{
		public int ID { get; set; }
		public double Gastpreis { get; set; }
		public double MAPreis { get; set; }
		public double Studentpreis { get; set; }
	}

	class Bild
	{
		public int ID { get; set; }
		public string Titel { get; set; }
		public string Alttext { get; set; }
		public string binärdaten { get; set; }
	}
}
@{
	Layout = "~/_Layout.cshtml";
	Page.title = "Detail";

	String id = Request.QueryString["id"];

	string constr = ConfigurationManager.ConnectionStrings["ConString"].ConnectionString;
	Mahlzeit mahlzeit = new Mahlzeit(){ID = 1, Name = "Falafel", Beschreibung = "Teigtasche mit Falafel aus Kichererbsen und Sesam, dazu passt hervorragend der Krautsalat."};
	Preis preis = new Preis() {ID = 1, Gastpreis = 5.95, MAPreis = 4.95, Studentpreis = 3.95};
	List<String> zutaten = new List<string>();
	List<Bild> bilder = new List<Bild>();
	using (MySqlConnection con = new MySqlConnection(constr))
	{
		try
		{
			con.Open();
			// Get Mahlzeit Details
			string query = $"SELECT * FROM Mahlzeiten WHERE ID = {id}";
			using (MySqlCommand cmd = new MySqlCommand(query))
			{
				cmd.Connection = con;
				using (MySqlDataReader reader = cmd.ExecuteReader())
				{
					while (reader.Read())
					{
						mahlzeit = new Mahlzeit
						{
							ID = Convert.ToInt32(reader["ID"]),
							Name = reader["Name"].ToString(),
							Beschreibung = reader["Beschreibung"].ToString(),
							Vorrat = Convert.ToInt32(reader["Vorrat"])
						};
					}
				}
			}
			// Get Price
			query = $"SELECT * FROM Preise WHERE ID = {id}";
			using (MySqlCommand cmd = new MySqlCommand(query))
			{
				cmd.Connection = con;
				using (MySqlDataReader reader = cmd.ExecuteReader())
				{
					while (reader.Read())
					{
						preis = new Preis
						{
							ID = Convert.ToInt32(reader["ID"]),
							Gastpreis = Convert.ToDouble(reader["Gastpreis"]),
							MAPreis = Convert.ToDouble(reader["MA-Preis"]),
							Studentpreis = Convert.ToDouble(reader["Studentpreis"])
						};
					}
				}
			}
			// Get Zutaten
			List<int> zutatenIds = new List<int>();
			query = $"SELECT Zutat FROM MahlzeitEnthältZutat WHERE Mahlzeit = {id}";
			using (MySqlCommand cmd = new MySqlCommand(query))
			{
				cmd.Connection = con;
				using (MySqlDataReader reader = cmd.ExecuteReader())
				{
					while (reader.Read())
					{
						zutatenIds.Add(Convert.ToInt32(reader["Zutat"]));
					}
				}
			}
			// Get Zutaten Details
			if (zutatenIds.Count > 0)
			{
				query = $"SELECT * FROM Zutaten WHERE ID in ({string.Join(",", zutatenIds)})";
				using (MySqlCommand cmd = new MySqlCommand(query))
				{
					cmd.Connection = con;
					using (MySqlDataReader reader = cmd.ExecuteReader())
					{
						while (reader.Read())
						{
							zutaten.Add(reader["Name"].ToString());
						}
					}
				}
			}
			// Get Bilder
			List<int> bildIds = new List<int>();
			query = $"SELECT Bild FROM MahlzeitHatBilder WHERE Mahlzeit = {id}";
			using (MySqlCommand cmd = new MySqlCommand(query))
			{
				cmd.Connection = con;
				using (MySqlDataReader reader = cmd.ExecuteReader())
				{
					while (reader.Read())
					{
						bildIds.Add(Convert.ToInt32(reader["Bild"]));
					}
				}
			}
			// Get Bilder Details
			if (bildIds.Count > 0)
			{
				query = $"SELECT * FROM Bilder WHERE ID in ({string.Join(",", bildIds)})";
				using (MySqlCommand cmd = new MySqlCommand(query))
				{
					cmd.Connection = con;
					using (MySqlDataReader reader = cmd.ExecuteReader())
					{
						while (reader.Read())
						{
							bilder.Add(new Bild
							{
								ID = Convert.ToInt32(reader["ID"]),
								Alttext = reader["Alt-Text"].ToString(),
								Titel = reader["Titel"].ToString(),
								binärdaten = "data:image/jpg;base64," + Convert.ToBase64String((byte[])reader["Binärdaten"])
							});
						}
					}
				}
			}
			con.Close();
		}
		catch (Exception e)
		{
			<p>@e.Message</p>
			con.Close();
		}
	}
}
<body>
	<!-- First Line (Title, Guest Price) -->
	<div class="row">
		<!-- Nothing -->
		<div class="col-2"></div>
		<!-- Title -->
		<div class="col" style="left: 0; top: 0">
			<h2>Details für "@mahlzeit.Name"</h2>
		</div>
		<!-- Guest Price -->
		<div class="col-2">
			<span style="position: absolute; right: 0; bottom: 0">Gast-Preis</span>
		</div>
	</div>
	<!-- Second Line (Login, Picture, Price & Buy)-->
	<div class="row">
		<!-- Login Form-->
		<div class="col-2">
			<form id="loginForm">
				<fieldset>
					<legend>Login</legend>
					<input id="loginName" type="text" class="form-control" placeholder="Benutzer" />
					<input id="loginPassword" type="password" class="form-control" placeholder="Passwort" />
					<a href="#">Anmelden</a>
				</fieldset>
			</form>
		</div>
		<!-- Picture -->
		<div class="col splash">
			@if (bilder.Count > 0)
			{ 
				<img height="150" src="@bilder[0].binärdaten" alt="@bilder[0].Alttext"/>
			}
			else
			{
				<p class="error">Es kann kein Bild gezeigt werden </p>
			}
		</div>
		<!-- Price & Buy Button-->
		<div class="col-2">
			<span style="position: absolute; right: 0; font-size: x-large">@preis.Gastpreis €</span>
			<button type="button" class="btn btn-default btn-block raise" style="position: absolute; right: 0; bottom: 0"><i class="fas fa-utensils"></i> Vorbestellen</button>
		</div>
	</div>
	<br />
	<!-- Third Line (Small Text, Description etc.)-->
	<div class="row">
		<!-- Text -->
		<div class="col-2">
			<p>
				Melden Sie sich jetzt an, um die wirklich viel günstigeren Preise für Mitarbeiter oder Studenten zu sehen.
			</p>
		</div>
		<!-- Tabs -->
		<div class="col">
			<ul class="nav nav-tabs" id="tab" role="tablist">
				<li class="nav-item">
					<a class="nav-link active" id="desc-tab" data-toggle="tab" href="#description" role="tab" aria-controls="description" aria-selected="true">Beschreibung</a>
				</li>
				<li class="nav-item">
					<a class="nav-link" id="ingredients-tab" data-toggle="tab" href="#ingredients" role="tab" aria-controls="ingredients" aria-selected="false">Zutaten</a>
				</li>
				<li class="nav-item">
					<a class="nav-link" id="ratings-tab" data-toggle="tab" href="#ratings" role="tab" aria-controls="ratings" aria-selected="false">Bewertungen</a>
				</li>
			</ul>
			<div class="tab-content" id="tabsContent" style="padding: 5px">
				<div class="tab-pane fade show active" id="description" role="tabpanel" aria-labelledby="desc-tab">
					<p>@mahlzeit.Beschreibung</p>
				</div>
				<div class="tab-pane fade" id="ingredients" role="tabpanel" aria-labelledby="ingredients-tab">
					<p>@string.Join(", ", zutaten)</p>
				</div>
				<div class="tab-pane fade" id="ratings" role="tabpanel" aria-labelledby="ratings-tab">
					<form id="ratingForm" action="http://bc5.m2c-lab.fh-aachen.de/form.php" method="post">
						<div class="input-group">
							<input type="text" class="form-control" placeholder="Benutzer" name="benutzer" style="height: 46px" />
							<div class="bewertung form-control">
								<input type="radio" id="star5" name="bewertung" value="5" />
								<label for="star5" title="5 Sterne">5 Sterne</label>
								<input type="radio" id="star4" name="bewertung" value="4" />
								<label for="star4" title="4 Sterne">4 Sterne</label>
								<input type="radio" id="star3" name="bewertung" value="3" checked="checked" />
								<label for="star3" title="3 Sterne">3 Sterne</label>
								<input type="radio" id="star2" name="bewertung" value="2" />
								<label for="star2" title="2 Sterne">2 Sterne</label>
								<input type="radio" id="star1" name="bewertung" value="1" />
								<label for="star1" title="1 Stern">1 Stern</label>
							</div>
						</div>
						<textarea name="bemerkung" class="form-control" rows="3" placeholder="Bemerkungen"></textarea>
						<button class="btn btn-default" type="submit" style="float: right">Abschicken</button>

						<input type="text" class="form-control" value="3144196" name="matrikel" hidden="hidden" />
						<input type="text" class="form-control" value="nie" name="kontrolle" hidden="hidden" />
					</form>
				</div>
			</div>
		</div>
		<!-- Nothing -->
		<div class="col-2"></div>
	</div>
</body>
</html>